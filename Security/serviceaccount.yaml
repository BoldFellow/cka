
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ci-deployer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: deployer
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ci-deployer-binding
subjects:
- kind: ServiceAccount
  name: ci-deployer
roleRef:
  kind: Role
  name: deployer
  apiGroup: rbac.authorization.k8s.io


# Binding into a deploy #

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: web-dashboard
#   namespace: default
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       name: web-dashboard
#   strategy:
#     rollingUpdate:
#       maxSurge: 25%
#       maxUnavailable: 25%
#     type: RollingUpdate
#   template:
#     metadata:
#       labels:
#         name: web-dashboard
#     spec:
#       serviceAccountName: dashboard-sa # SA set
#       containers:
#       - image: gcr.io/kodekloud/customimage/my-kubernetes-dashboard
#         imagePullPolicy: Always
#         name: web-dashboard
#         ports:
#         - containerPort: 8080
#           protocol: TCP


#--------------Essential commands--------------#

# # Create a service account
# kubectl create serviceaccount <sa-name>

# # List service accounts
# kubectl get serviceaccounts

# # Describe a service account
# kubectl describe serviceaccount <sa-name>

# # Delete a service account
# kubectl delete serviceaccount <sa-name>

# # Create a token for a service account (K8s 1.24+)
# kubectl create token <sa-name>

# kubectl get pods --as=system:serviceaccount:<NS-name>:<sa-name> # check permitions

